/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 * 3. Sitewide border-box sizing.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

* {
  box-sizing: border-box;
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
* {
  box-sizing: border-box;
}

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

textarea {
  resize: vertical;
}

img,
iframe {
  display: block;
  max-width: 100%;
}

:root {
  --black: #000000;
  --ada-black: #000028;
  --link-color: var(--black);
  --alpha: #5DFF77;
}

.radio-wrap label:first-child,
.checkbox-wrap label:first-child, .alignleft:first-child, .alignright:first-child, .aligncenter:first-child, p:first-child, ul:first-child, ol:first-child, h1:first-child, h2:first-child, h3:first-child, h4:first-child, h5:first-child, h6:first-child, blockquote:first-child, .iframe-wrap:first-child {
  margin-top: 0;
}
.radio-wrap label:last-child,
.checkbox-wrap label:last-child, .alignleft:last-child, .alignright:last-child, .aligncenter:last-child, p:last-child, ul:last-child, ol:last-child, h1:last-child, h2:last-child, h3:last-child, h4:last-child, h5:last-child, h6:last-child, blockquote:last-child, .iframe-wrap:last-child {
  margin-bottom: 0;
}

.soon-bar, .info-bar .inner, .hero, footer.primary, header.primary .inner, .wrapper {
  width: calc(100% - 10vw);
  max-width: 1440px;
  margin: 0 auto;
}

* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html {
  background: #fff;
  font-size: 16px;
  font-family: "Roobert", "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.5;
  color: var(--black);
  scroll-behavior: smooth;
}

body {
  background: #fff;
  overflow-x: hidden;
  -ms-scroll-chaining: none;
      overscroll-behavior: none;
}

.clearfix:before,
.clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

.iframe-wrap {
  position: relative;
  padding-bottom: 56.25%;
  /* 16:9 */
  padding-top: 25px;
  height: 0;
}
.iframe-wrap iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.alignleft, .alignright, .aligncenter {
  float: none;
  margin: 30px auto;
}

@media (min-width: 640px) {
  .alignleft {
    float: left;
    margin: 0 30px 30px 0;
  }
}

@media (min-width: 640px) {
  .alignright {
    float: right;
    margin: 0 0 30px 30px;
  }
}

@font-face {
  font-family: "Roobert";
  font-display: swap;
  font-weight: 600;
  src: url("https://info.ada.support/hubfs/fonts/Roobert-SemiBold.woff2") format("woff2"), url("https://info.ada.support/hubfs/fonts/Roobert-SemiBold.woff") format("woff");
}
@font-face {
  font-family: "Roobert";
  font-display: swap;
  font-weight: 500;
  src: url("https://info.ada.support/hubfs/Fonts/roobert-medium-webfont.woff2") format("woff2"), url("https://info.ada.support/hubfs/Fonts/roobert-medium-webfont.woff") format("woff");
}
@font-face {
  font-family: "Roobert";
  font-display: swap;
  font-weight: 400;
  src: url("https://info.ada.support/hubfs/fonts/Roobert-Regular.woff2") format("woff2"), url("https://info.ada.support/hubfs/fonts/Roobert-Regular.woff") format("woff");
}
h1, h2, h3, h4, h5, h6 {
  margin: 40px 0 30px;
  line-height: 1;
  font-weight: 500;
}
h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
  text-decoration: underline;
}

h1 {
  font-size: 36px;
}

h2 {
  font-size: 32px;
}

h3 {
  font-size: 28px;
}

h4 {
  font-size: 22px;
}

h5 {
  font-size: 20px;
}

h6 {
  font-size: 18px;
}

::-moz-selection {
  background: var(--link-color);
  color: #fff;
  text-shadow: none;
}

::selection {
  background: var(--link-color);
  color: #fff;
  text-shadow: none;
}

p, ul, ol, blockquote, .iframe-wrap {
  margin: 30px 0;
}

a {
  color: var(--link-color);
  text-decoration: none;
  transition: all 0.3s;
}
a:hover {
  color: var(--link-hover);
}

strong {
  font-weight: 700;
}

address {
  font-style: normal;
}

blockquote {
  padding-left: 20px;
  border-left: 5px solid #e6e6e6;
}
blockquote cite {
  display: block;
  margin: 5px 0 0;
  font-size: 12px;
  font-style: normal;
  text-transform: uppercase;
}

button {
  padding: 0;
  background: 0;
  border: 0;
  cursor: pointer;
  transition: all 0.3s;
}

.button {
  --btn-bg: var(--link-color);
  --btn-border: var(--link-color);
  --btn-color: #fff;
  position: relative;
  display: inline-flex;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  height: clamp(45px, 6vw, 90px);
  padding: 0 30px;
  background: var(--btn-bg);
  border: 2px solid var(--btn-border);
  border-radius: clamp(45px, 6vw, 90px);
  color: var(--btn-color);
  font-family: "Roobert", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: clamp(18px, 2.5vw, 30px);
  line-height: 1;
  text-decoration: none;
  transform: translateZ(0);
}
.button:hover, .button:focus {
  color: var(--btn-color);
}

label {
  display: block;
  margin: 0 0 5px;
  font-size: 14px;
  text-transform: uppercase;
}
label .required {
  margin-left: 5px;
  color: #c82727;
}
label.error {
  color: #c82727;
}

input:not([type=radio]),
input:not([type=checkbox]),
textarea,
select {
  display: flex;
  align-items: center;
  width: 100%;
  height: 40px;
  margin: 0;
  padding: 0 10px;
  color: var(--black);
  background-color: #fff;
  border: 1px solid #ccc;
  font-family: "Roobert", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 16px;
  font-weight: 300;
  transition: all 0.3s;
}
input:not([type=radio]):focus,
input:not([type=checkbox]):focus,
textarea:focus,
select:focus {
  background-color: #f2f2f2;
}
input:not([type=radio]).error,
input:not([type=checkbox]).error,
textarea.error,
select.error {
  border-color: 1px solid #c82727;
}
input:not([type=radio])::-moz-placeholder, input:not([type=checkbox])::-moz-placeholder, textarea::-moz-placeholder, select::-moz-placeholder {
  opacity: 1;
  color: rgba(0, 0, 0, 0.5);
}
input:not([type=radio]):-ms-input-placeholder, input:not([type=checkbox]):-ms-input-placeholder, textarea:-ms-input-placeholder, select:-ms-input-placeholder {
  opacity: 1;
  color: rgba(0, 0, 0, 0.5);
}
input:not([type=radio])::placeholder,
input:not([type=checkbox])::placeholder,
textarea::placeholder,
select::placeholder {
  opacity: 1;
  color: rgba(0, 0, 0, 0.5);
}

textarea {
  align-items: flex-start;
  min-height: 200px;
  padding: 15px 10px;
}

select {
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 0;
  background: url('data:image/svg+xml;utf8,<svg height="50" width="100" xmlns="http://www.w3.org/2000/svg" version="1.1"><polygon fill="black" points="100,0 0,0 50,50"/></svg>') right 10px top 50%/10px no-repeat #fff;
}
select:invalid {
  color: rgba(0, 0, 0, 0.5);
}
select.error {
  border: 1px solid #c82727;
}

input[type=text], input[type=password], input[type=file], textarea, button {
  outline: none;
}

.radio-wrap label,
.checkbox-wrap label {
  display: flex;
  align-items: flex-start;
  padding: 0;
}
.radio-wrap input,
.checkbox-wrap input {
  margin: 4px 10px 0 0;
  width: auto;
}

.input-wrap {
  margin-bottom: 20px;
}
.input-wrap.error .error-flag {
  display: block;
}

.error-flag {
  display: none;
  padding: 5px 10px;
  background: #c82727;
  color: #fff;
  font-size: 14px;
  font-weight: 700;
  text-transform: uppercase;
}

header.primary {
  position: sticky;
  top: 0;
  z-index: 1000;
  padding: 1rem 0;
}
header.primary .inner {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
header.primary .logo {
  position: relative;
  z-index: 500;
  width: 150px;
}
header.primary .nav-trigger {
  position: relative;
  z-index: 500;
  font-weight: 600;
}
header.primary .nav-trigger:hover, header.primary .nav-trigger:focus {
  text-decoration: underline;
}
@media (min-width: 1024px) {
  header.primary .nav-trigger {
    display: none;
  }
}

footer.primary {
  display: flex;
  justify-content: space-between;
  padding: 20px 0;
  font-size: 14px;
}
footer.primary .col {
  display: flex;
  align-items: center;
}
footer.primary .logo {
  width: 30px;
  margin: 0 30px 0 0;
}
footer.primary .not-small {
  display: none;
}
@media (min-width: 768px) {
  footer.primary .not-small {
    display: inline;
  }
}

nav ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
nav ul li {
  position: relative;
}
nav ul li a {
  display: block;
}

nav.main {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 100;
  display: flex;
  background: #fff;
  width: 100vw;
  height: 100vh;
  padding: 120px 1rem 0;
  transform: translateY(-125%);
  transition: all 250ms;
}
@media (min-width: 1024px) {
  nav.main {
    position: relative;
    top: unset;
    left: unset;
    background: none;
    width: auto;
    height: auto;
    padding: 0;
    transform: translateY(0);
  }
}
nav.main.visible {
  transform: translateY(0);
}
@media (min-width: 1024px) {
  nav.main > ul {
    display: flex;
    align-items: center;
  }
}
nav.main > ul > li {
  margin-bottom: 20px;
}
@media (min-width: 1024px) {
  nav.main > ul > li {
    margin: 0 0 0 clamp(25px, 5vw, 50px);
  }
}
@media (min-width: 1024px) {
  nav.main > ul > li.cta {
    margin-left: clamp(40px, 5vw, 80px);
  }
}
@media (min-width: 1024px) {
  nav.main > ul > li.cta a {
    display: inline-flex;
    flex-shrink: 0;
    align-items: center;
    justify-content: center;
    height: clamp(45px, 6vw, 90px);
    padding: 0 30px;
    border-radius: clamp(45px, 6vw, 90px);
    background: var(--link-color);
    color: #fff;
    font-size: clamp(18px, 2.5vw, 30px);
    line-height: 1;
  }
}
nav.main > ul > li > a {
  font-size: 36px;
  line-height: 1.2;
}
@media (min-width: 1024px) {
  nav.main > ul > li > a {
    font-size: 30px;
  }
}
nav.main > ul > li > a.current {
  text-decoration: underline;
  text-underline-offset: 0.5rem;
}

nav.footer ul {
  display: flex;
}
nav.footer ul li {
  margin: 0 0 0 30px;
}

.rellax {
  transition: all 250ms;
}

.hero {
  position: relative;
  padding: clamp(50px, 5vw, 100px) 0;
}
@media (min-width: 768px) {
  .hero {
    padding-top: 0;
  }
}
.hero .text {
  position: relative;
  z-index: 500;
}
@media (min-width: 768px) {
  .hero .text {
    position: absolute;
    bottom: clamp(100px, 15vw, 275px);
  }
}
.hero .text h1 {
  font-size: clamp(36px, 5vw, 78px);
}
.hero .text h1 span {
  display: block;
  opacity: 0;
  transform: translateY(10%);
  transition: all 400ms;
}
.hero .text h1 span.loaded {
  transform: translateY(0);
  opacity: 1;
}
.hero .text h1 span.loaded:nth-of-type(1) {
  transition-delay: 200ms;
}
.hero .text h1 span.loaded:nth-of-type(2) {
  transition-delay: 400ms;
}
.hero .text h1 span.loaded:nth-of-type(3) {
  transition-delay: 600ms;
}
.hero .text .lower {
  display: flex;
  flex-direction: column-reverse;
  align-items: flex-start;
  margin-top: clamp(25px, 15vw, 225px);
}
@media (min-width: 768px) {
  .hero .text .lower {
    flex-direction: row;
    align-items: center;
  }
}
.hero .text .lower .button {
  margin-top: clamp(25px, 5vw, 50px);
}
@media (min-width: 768px) {
  .hero .text .lower .button {
    margin: 0 clamp(50px, 5vw, 110px) 0 0;
  }
}
.hero .text .lower time {
  font-size: clamp(28px, 5vw, 56px);
}
.hero .image {
  position: absolute;
  z-index: 100;
  top: 0;
  right: -7vw;
  width: min(40vw, 500px);
}
@media (min-width: 768px) {
  .hero .image {
    top: unset;
    bottom: -1vw;
  }
}
.hero .image img {
  border-radius: min(5vw, 70px);
}
.hero .logo {
  position: relative;
  z-index: 250;
  margin: clamp(-75px, -15vw, -50px) -5vw 0;
}
@media (min-width: 768px) {
  .hero .logo {
    margin-top: 0;
  }
}

.info-bar {
  background: var(--alpha);
  padding: clamp(50px, 10vw, 150px) 0;
}
.info-bar .inner {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
}
@media (min-width: 768px) {
  .info-bar .inner {
    align-items: center;
  }
}
.info-bar .inner .image {
  width: 30%;
  margin: 0 5vw 0 -7vw;
  flex-shrink: 0;
}
@media (min-width: 768px) {
  .info-bar .inner .image {
    width: 48%;
    margin: 0;
  }
}
.info-bar .inner .image img {
  border-radius: min(5vw, 70px);
  overflow: hidden;
  margin: 0 auto;
}
@media (min-width: 768px) {
  .info-bar .inner .image img {
    width: 80%;
  }
}
.info-bar .inner .text {
  position: relative;
  z-index: 250;
  font-size: clamp(16px, 5vw, 34px);
  line-height: 1.25;
}
@media (min-width: 768px) {
  .info-bar .inner .text {
    width: 48%;
  }
}
.info-bar .inner .text h1 {
  margin-bottom: 60px;
  font-size: clamp(28px, 7.5vw, 56px);
}

.soon-bar {
  padding: clamp(50px, 10vw, 150px) 0;
}
.soon-bar h1 {
  position: relative;
  z-index: 500;
  margin-bottom: clamp(30px, 10vw, 100px);
  font-size: clamp(36px, 10vw, 78px);
  font-weight: 400;
}
.soon-bar a {
  display: inline-flex;
  align-items: center;
  color: var(--alpha);
  font-size: clamp(36px, 10vw, 56px);
  line-height: 1.2;
}
.soon-bar a svg {
  width: 56px;
  margin: 10px 0 0 20px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
